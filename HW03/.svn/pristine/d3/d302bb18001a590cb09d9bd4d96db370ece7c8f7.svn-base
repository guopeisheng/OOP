<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0) on Sat Sep 16 18:36:40 CDT 2017 -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>BallModel</title>
<meta name="date" content="2017-09-16">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="BallModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../model/IModel2ViewAdapter.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallModel.html" target="_top">Frames</a></li>
<li><a href="BallModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class BallModel" class="title">Class BallModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.BallModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">BallModel</span>
extends java.lang.Object</pre>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>zihanli,yiranwei
 The model that drives the view MainFrame</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_errorStrategyFac">_errorStrategyFac</a></span></code>
<div class="block">the strategy that is used when the class is wrong</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_model2ViewAdpt">_model2ViewAdpt</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../strategy/SwitchStrategy.html" title="class in strategy">SwitchStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_switcher">_switcher</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private javax.swing.Timer</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_timer">_timer</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_timeSlice">_timeSlice</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../util/Dispatcher.html" title="class in util">Dispatcher</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#myDispatcher">myDispatcher</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/BallModel.html#BallModel-model.IModel2ViewAdapter-">BallModel</a></span>(<a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a>&nbsp;model2ViewAdpt)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#combineStrategyFacs-strategy.IStrategyFac-strategy.IStrategyFac-">combineStrategyFacs</a></span>(<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac1,
                   <a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac2)</code>
<div class="block">Returns an IStrategyFac that can instantiate a MultiStrategy with the two
 strategies made by the two given IStrategyFac objects.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#deleteBalls--">deleteBalls</a></span>()</code>
<div class="block">Delete all observers from the dispatcher and from the screen</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#fixName-java.lang.String-">fixName</a></span>(java.lang.String&nbsp;classname)</code>&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../strategy/SwitchStrategy.html" title="class in strategy">SwitchStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#getSwitchStrategy--">getSwitchStrategy</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#loadBall-java.awt.Component-strategy.IUpdateStrategy-">loadBall</a></span>(java.awt.Component&nbsp;window,
        <a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;strategy)</code>&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#loadStrategy-java.lang.String-">loadStrategy</a></span>(java.lang.String&nbsp;classname)</code>
<div class="block">Use the classname to create an object of IUpdateStrategy</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#makeStrategyFac-java.lang.String-">makeStrategyFac</a></span>(java.lang.String&nbsp;classname)</code>
<div class="block">Returns an IStrategyFac that can instantiate the strategy specified by
 classname.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#start--">start</a></span>()</code>
<div class="block">start the timer to make the animations</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#swichSwichStrategy-strategy.IUpdateStrategy-">swichSwichStrategy</a></span>(<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;newStrategy)</code>&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#update-java.awt.Graphics-">update</a></span>(java.awt.Graphics&nbsp;g)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="Z:Z_model2ViewAdpt">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_model2ViewAdpt</h4>
<pre>private&nbsp;<a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a> _model2ViewAdpt</pre>
</li>
</ul>
<a name="Z:Z_timeSlice">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_timeSlice</h4>
<pre>private&nbsp;int _timeSlice</pre>
</li>
</ul>
<a name="myDispatcher">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>myDispatcher</h4>
<pre>private&nbsp;<a href="../util/Dispatcher.html" title="class in util">Dispatcher</a> myDispatcher</pre>
</li>
</ul>
<a name="Z:Z_timer">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_timer</h4>
<pre>private&nbsp;javax.swing.Timer _timer</pre>
</li>
</ul>
<a name="Z:Z_errorStrategyFac">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_errorStrategyFac</h4>
<pre>public&nbsp;<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a> _errorStrategyFac</pre>
<div class="block">the strategy that is used when the class is wrong</div>
</li>
</ul>
<a name="Z:Z_switcher">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>_switcher</h4>
<pre>private&nbsp;<a href="../strategy/SwitchStrategy.html" title="class in strategy">SwitchStrategy</a> _switcher</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="BallModel-model.IModel2ViewAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BallModel</h4>
<pre>public&nbsp;BallModel(<a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a>&nbsp;model2ViewAdpt)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>model2ViewAdpt</code> - use IModel2ViewAdapter to initialize the class</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="update-java.awt.Graphics-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre>public&nbsp;void&nbsp;update(java.awt.Graphics&nbsp;g)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - notify all the balls to paint</dd>
</dl>
</li>
</ul>
<a name="getSwitchStrategy--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSwitchStrategy</h4>
<pre>public&nbsp;<a href="../strategy/SwitchStrategy.html" title="class in strategy">SwitchStrategy</a>&nbsp;getSwitchStrategy()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the SwitchStrategy</dd>
</dl>
</li>
</ul>
<a name="swichSwichStrategy-strategy.IUpdateStrategy-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>swichSwichStrategy</h4>
<pre>public&nbsp;void&nbsp;swichSwichStrategy(<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;newStrategy)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newStrategy</code> - change the temp strategy to a new strategy</dd>
</dl>
</li>
</ul>
<a name="deleteBalls--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deleteBalls</h4>
<pre>public&nbsp;void&nbsp;deleteBalls()</pre>
<div class="block">Delete all observers from the dispatcher and from the screen</div>
</li>
</ul>
<a name="makeStrategyFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeStrategyFac</h4>
<pre>public&nbsp;<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;makeStrategyFac(java.lang.String&nbsp;classname)</pre>
<div class="block">Returns an IStrategyFac that can instantiate the strategy specified by
 classname. Returns a factory for a beeping error strategy if classname is null. 
 The toString() of the returned factory is the classname.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classname</code> - Shortened name of desired strategy</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A factory to make that strategy</dd>
</dl>
</li>
</ul>
<a name="combineStrategyFacs-strategy.IStrategyFac-strategy.IStrategyFac-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineStrategyFacs</h4>
<pre>public&nbsp;<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;combineStrategyFacs(<a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac1,
                                        <a href="../strategy/IStrategyFac.html" title="interface in strategy">IStrategyFac</a>&nbsp;stratFac2)</pre>
<div class="block">Returns an IStrategyFac that can instantiate a MultiStrategy with the two
 strategies made by the two given IStrategyFac objects. Returns null if
 either supplied factory is null. The toString() of the returned factory
 is the toString()'s of the two given factories, concatenated with "-". 
 If either factory is null, then a factory for a beeping error strategy is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>stratFac1</code> - An IStrategyFac for a strategy</dd>
<dd><code>stratFac2</code> - An IStrategyFac for a strategy</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An IStrategyFac for the composition of the two strategies</dd>
</dl>
</li>
</ul>
<a name="loadStrategy-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadStrategy</h4>
<pre>public&nbsp;<a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;loadStrategy(java.lang.String&nbsp;classname)</pre>
<div class="block">Use the classname to create an object of IUpdateStrategy</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classname</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="loadBall-java.awt.Component-strategy.IUpdateStrategy-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadBall</h4>
<pre>public&nbsp;void&nbsp;loadBall(java.awt.Component&nbsp;window,
                     <a href="../strategy/IUpdateStrategy.html" title="interface in strategy">IUpdateStrategy</a>&nbsp;strategy)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>window</code> - </dd>
<dd><code>strategy</code> - To create a ball</dd>
</dl>
</li>
</ul>
<a name="fixName-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fixName</h4>
<pre>public&nbsp;java.lang.String&nbsp;fixName(java.lang.String&nbsp;classname)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classname</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>make sure to support  either full or abbreviated strategy class name</dd>
</dl>
</li>
</ul>
<a name="start--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">start the timer to make the animations</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../model/IModel2ViewAdapter.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallModel.html" target="_top">Frames</a></li>
<li><a href="BallModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
